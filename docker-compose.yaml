version: '3.3'
services:
  zookeeper:
    hostname: zookeeper
    container_name: zookeeper
    image: zookeeper:latest
    ports:
      - "2181:2181"
    environment:
       - ALLOW_ANONYMOUS_LOGIN=yes    
  kafka:
    image: ubuntu/kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  kafka-connect:
    build:
      context: ./kafka-connect
      dockerfile: Dockerfile
    hostname: kafka-connect
    container_name: kafka-connect
    restart: unless-stopped
    ports:
      - 8083:8083
    entrypoint: /opt/kafka/bin/connect-standalone.sh
    command: /opt/kafka/config/connect-standalone.properties /opt/kafka/config/debezium-mysql-source-connector.properties
    volumes:
      - ./kafka-connect/connect-standalone.properties:/opt/kafka/config/connect-standalone.properties
      - ./kafka-connect/debezium-mysql-source-connector.properties:/opt/kafka/config/debezium-mysql-source-connector.properties
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_REST_PORT: 8083
    depends_on:
      - kafka
      - mysql
  nifi:
    #image: apache/nifi
    #platform: linux/amd64
    build:
      context: ./nifi
      dockerfile: Dockerfile
    hostname: nifi
    container_name: nifi
    ports:
      - "8080:8080" 
    environment:
       NIFI_WEB_HTTP_PORT: 8080
    volumes: 
      - nifistate:/opt/nifi/nifi-current/state
      - nifidb:/opt/nifi/nifi-current/database_repository
      - nififlowfile:/opt/nifi/nifi-current/flowfile_repository
      - nificontent:/opt/nifi/nifi-current/content_repository
      - nifiprovenance:/opt/nifi/nifi-current/provenance_repository
      - nifilogs:/opt/nifi/nifi-current/logs
      - ./nifi/templates:/opt/nifi/conf/templates/
    depends_on:
      - kafka
  mysql:
    image: mysql:5.7
    container_name: mysql
    hostname: mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: test
      MYSQL_USER: debezium_user
      MYSQL_PASSWORD: debezium_password
    ports:
      - "3306:3306"
    volumes:
      - dbdata:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./mysql/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
  mongodb:
    image: mongo:5.0
    container_name: mongodb
    hostname: mongodb
    ports:
      - 27017:27017
    volumes:
      - mongodata:/data/db
    environment:
      MONGO_INITDB_DATABASE: mydata
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
volumes:
  dbdata:
  mongodata:
  nifistate:
  nifidb:
  nififlowfile:
  nificontent:
  nifiprovenance:
  nifilogs: